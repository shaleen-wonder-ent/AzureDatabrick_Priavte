{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Azure Databricks Private Network with ADLS Gen2 - Central India"
  },
  "parameters": {
    "workspaceName": {
      "type": "string",
      "defaultValue": "[concat('dbw-private-india-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Databricks workspace"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('adls', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the ADLS Gen2 storage account"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet-databricks-india",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username for the Jump VM"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the Jump VM"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vnetAddressPrefix": "10.0.0.0/16",
    "subnetHostPrefix": "10.0.1.0/24",
    "subnetContainerPrefix": "10.0.2.0/24",
    "subnetPePrefix": "10.0.3.0/24",
    "subnetBackendPePrefix": "10.0.4.0/24",
    "subnetJumpboxPrefix": "10.0.5.0/24",
    "subnetBastionPrefix": "10.0.6.0/26",
    "subnetStoragePePrefix": "10.0.7.0/24",
    "storageContainers": ["raw", "processed", "curated", "sandbox", "archive"]
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-05-01",
      "name": "[parameters('vnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[variables('vnetAddressPrefix')]"]
        },
        "subnets": [
          {
            "name": "snet-databricks-host",
            "properties": {
              "addressPrefix": "[variables('subnetHostPrefix')]",
              "delegations": [
                {
                  "name": "Microsoft.Databricks.workspaces",
                  "properties": {
                    "serviceName": "Microsoft.Databricks/workspaces"
                  }
                }
              ]
            }
          },
          {
            "name": "snet-databricks-container",
            "properties": {
              "addressPrefix": "[variables('subnetContainerPrefix')]",
              "delegations": [
                {
                  "name": "Microsoft.Databricks.workspaces",
                  "properties": {
                    "serviceName": "Microsoft.Databricks/workspaces"
                  }
                }
              ]
            }
          },
          {
            "name": "snet-private-endpoints",
            "properties": {
              "addressPrefix": "[variables('subnetPePrefix')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          },
          {
            "name": "snet-backend-private-endpoint",
            "properties": {
              "addressPrefix": "[variables('subnetBackendPePrefix')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          },
          {
            "name": "snet-jumpbox",
            "properties": {
              "addressPrefix": "[variables('subnetJumpboxPrefix')]"
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "[variables('subnetBastionPrefix')]"
            }
          },
          {
            "name": "snet-storage-private-endpoints",
            "properties": {
              "addressPrefix": "[variables('subnetStoragePePrefix')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "publicNetworkAccess": "Disabled",
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Databricks/workspaces",
      "apiVersion": "2024-05-01",
      "name": "[parameters('workspaceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "sku": {
        "name": "premium"
      },
      "properties": {
        "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', concat('databricks-rg-', parameters('workspaceName'), '-', uniqueString(parameters('workspaceName'), resourceGroup().id)))]",
        "parameters": {
          "customVirtualNetworkId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
          },
          "customPublicSubnetName": {
            "value": "snet-databricks-host"
          },
          "customPrivateSubnetName": {
            "value": "snet-databricks-container"
          },
          "enableNoPublicIp": {
            "value": true
          }
        },
        "publicNetworkAccess": "Disabled",
        "requiredNsgRules": "NoAzureDatabricksRules"
      }
    }
  ],
  "outputs": {
    "workspaceName": {
      "type": "string",
      "value": "[parameters('workspaceName')]"
    },
    "workspaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Databricks/workspaces', parameters('workspaceName'))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "vnetName": {
      "type": "string",
      "value": "[parameters('vnetName')]"
    }
  }
}